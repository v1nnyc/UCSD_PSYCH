<html>
<meta charset="utf-8">

<head>
	<script src="https://www.gstatic.com/firebasejs/5.7.2/firebase-app.js"></script>
	<script src="https://www.gstatic.com/firebasejs/5.7.2/firebase-auth.js"></script>
	<script src="https://www.gstatic.com/firebasejs/5.7.2/firebase-database.js"></script>
	<script src="https://www.gstatic.com/firebasejs/5.7.2/firebase-firestore.js"></script>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
	<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
	<link href="https://fonts.googleapis.com/css?family=Open+Sans|Roboto" rel="stylesheet">
	<link rel="stylesheet" href="css/styles.css" type="text/css" />
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.2.0/css/all.css" integrity="sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ" crossorigin="anonymous">
	<script src="js/firebae.js"></script>
	<script src="js/userflowcontrol.js"></script>
	<script>
		requiresFirebase();
	</script>
	<style>
		img {
			width: 100%;
		}
		#not-selected {
			font-size: 25px;
			color: red;
		}
		#selected {
			font-size: 15px;
			color: black;
		}
		p span {
			color: #64f24f;
			font-size: 30px;
		}
	</style>
</head>

<body>
	<div class="container">
		<div class="row">
			<h5>If you see the man from the video, select him. Otherwise, select the 'not present' option below.</h5>
		</div>
		<!-- Row 1, Col 1. -->
		<div class="row justify-content-between">
			<div class="col-md-4">
				<img class="filler" id='0' src='media/fillers/blank.png'>
			</div>
			<!-- Row 1, Col 2 -->
			<div class="col-md-4">
				<img class="filler" id='1' src='media/fillers/blank.png'>
			</div>
			<!-- Row 1, Col 3 -->
			<div class="col-md-4">
				<img class="filler" id='2' src='media/fillers/blank.png'>
			</div>
		</div>
		</br>
		<!-- Row 2, Col 1 -->
		<div class="row justify-content-between">
			<div class="col-md-4">
				<img class="filler" id='3' src='media/fillers/blank.png'>
			</div>
			<!-- Row 2, Col 2 -->
			<div class="col-md-4">
				<img class="filler" id='4' src='media/fillers/blank.png'>
			</div>
			<!-- Row 2, Col 3 -->
			<div class="col-md-4">
				<img class="filler" id='5' src='media/fillers/blank.png'>
			</div>
		</div>
		<br />
		<!-- Row 3, Col 1 -->
		<div class="row justify-content-between">
			<div class="col-md-4">
				<img class="filler" id='6' src='media/fillers/blank.png'>
			</div>
			<!-- Row 3, Col 2 -->
			<div class="col-md-4">
				<img class="filler" id='7' src='media/fillers/blank.png'>
			</div>
			<!-- Row 3, Col 3 -->
			<div class="col-md-4">
				<img class="filler" id='8' src='media/fillers/blank.png'>
			</div>
		</div>
		<!--radio button for target not present that when clicked, will call the popup -->
		<div class="form-check mt-3" id="standard">
			<div class="form-check mt-3">
				<input id="notPresentCheck" class="form-check-input" type="checkbox" onclick="radioClicked()" style="width:20px; height: 20px; border-radius: 4px; background-color: lightgrey; margin-top: 11px; " />
				<label class="form-check-label mt-1" style="font-size: 1.25rem; margin-top: 0.4rem">Check here <strong>if the person is not present</strong></label>
			</div>
		</div>
		<div class="row" id="confidence-slider-div" hidden>
			<div class="form-check mt-3">
				<h5>How certain are you?</h5>
				<input type="range" min="0" max="100" value="50" class="slider" id="confidence-slider" oninput="changeSlider(this)">
				<p id="not-selected">Value: <span id="confidence-slider-output"></span></p>
			</div>
		</div>


		<!-- next button to relocate to debrief -->
		<div class="row">
			<input id="next-button" class="btn btn-primary" type="submit" name="formSubmit" value="Next" hidden />
		</div>

		<!-- Modal -->
		<div class="modal fade" id="popup" tabindex="-1" role="dialog" aria-labelledby="popupTitle" aria-hidden="true" data-backdrop="static" data-keyboard="false">
			<div class="modal-dialog modal-dialog-centered" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h6 class="modal-title" id="exampleModalLongTitle">How certain are you that this is NOT the man from the video?</h6>
					</div>
					<div class="modal-body">
						<img id="popup-pic" src="media/fillers/Picture1.jpg" class="rounded mx-auto d-block" style="width:80%; height: 60%">
					</div>
					<div class="modal-footer">
						<div class="col-8">
							<div class="row" id="confidence-slider" style="margin-left:20px; margin-right: 20px;">
								<input type="range" min="0" max="100" value="50" class="slider" id="popup-slider" oninput="changeSlider(this)">
								<p id="not-selected">Value: <span id="popup-slider-output"></span></p>
							</div>
						</div>
						<div class="col-4">
							<input id="next-button1" onclick="incrementFlow()" class="btn btn-primary" type="submit" name="formSubmit" value="Next" style="width:100%" disabled />
						</div>
					</div>
				</div>
			</div>
		</div>

	</div>

	<script>
		// used for measuring time between pic render and choice
		let startTime;
		getUserData().then(e => {
			initializeExperiment();
		})
		// initialize DOM based on exp type
		function initializeExperiment() {
			// populating pictures
			let lineup = getPics(window.experimentType);
			addPics(lineup);
			// recording time
			startTime = new Date();
			// responsible for recording which user input was selected
			window.radioSelected = false;
			window.pictureSelected = false;
			window.targetSelected = false;
			makePicturesSelectable();
			showNonePresentButton();
			pickPopupPic();
			if (!window.experimentType.includes('s')) {
				$("#notPresentCheck").attr("data-toggle", "modal");
				$("#notPresentCheck").attr("data-target", "#popup");
			}
		}
		function pickPopupPic() {
			let pic = document.getElementById("popup-pic");
			if (window.experimentType.includes("np")) {
				let pictures = document.getElementsByClassName('filler');
				pic.src = pictures[Math.floor(Math.random() * pictures.length)].src;
			} else {
				pic.src = "media/target.jpg"
			}
		}
		function makePicturesSelectable() {
			let pictures = document.getElementsByTagName("img");
			for (let picture in pictures) {
				let curr_pic = pictures[picture];
				curr_pic.onclick = function() {
					selectedPicture(this);
					checkIfTarget(this);
					window.pictureSelected = true;
					window.radioSelected = false;
				}
			}
		}
		function showNonePresentButton() {
			document.getElementById("standard").hidden = false;
		}
		function selectedPicture(imgElement) {
			clearSelectedPictures();
			unselectBox();
			hideNextButton();
			resetSlider();
			imgElement.style["border"] = "5px solid red";
			showConfidenceSlider();
			stopTime();
		}
		function checkIfTarget(imgElement) {
			window.targetSelected = false;
			if ((imgElement.src).includes("target")) {
				window.targetSelected = true;
			}
		}
		function unselectBox() {
			document.getElementById("notPresentCheck").checked = false;
		}
		function clearSelectedPictures() {
			let pictures = document.getElementsByTagName("img");
			for (let picture in pictures) {
				let curr_pic = pictures[picture];
				if (curr_pic.style) {
					curr_pic.style.border = "";
				}
			}
		}
		function resetSlider() {
			if (document.getElementById("selected")) {
				document.getElementById("selected").innerHTML = `Value: <span id="confidence-slider-output"></span>`;
				document.getElementById("selected").id = "not-selected";
			}
		}
		function hideNextButton() {
			document.getElementById('next-button').hidden = true;
		}
		function showConfidenceSlider() {
			document.getElementById("confidence-slider-div").hidden = false;
		}
		function radioClicked() {
			clearSelectedPictures();
			hideNextButton();
			resetSlider();
			console.log(window.experimentType);
			if (window.experimentType === "tp" || window.experimentType === "tnp") {
				window.radioSelected = true;
				window.pictureSelected = false;
				window.targetSelected = false;
				stopTime();
			} else {
				showConfidenceSlider();
				window.radioSelected = true;
				window.pictureSelected = false;
				window.targetSelected = false;
				stopTime();
			}
		}
		//function that changes the value of the slider for confidence of
		//selection in lineup
		function changeSlider(element) {
			let curr_output = document.getElementById(element.id + '-output');
			curr_output.innerHTML = element.value + "%";
			curr_output.parentNode.id = "selected";
			if (element.id.includes("popup")) {
				element.parentNode.parentNode.parentNode.childNodes[3].childNodes[1].disabled = false;
			} else {
				document.getElementById("next-button").hidden = false;
			}
			window.standardConfidence = element.value;
		}
		// used to shuffle array of mugshot pics
		function shuffle(array) {
			var currentIndex = array.length,
				temporaryValue, randomIndex;
			// While there remain elements to shuffle...
			while (0 !== currentIndex) {
				// Pick a remaining element...
				randomIndex = Math.floor(Math.random() * currentIndex);
				currentIndex -= 1;
				// And swap it with the current element.
				temporaryValue = array[currentIndex];
				array[currentIndex] = array[randomIndex];
				array[randomIndex] = temporaryValue;
			}
			return array;
		}
		// picks pictures for experiment
		function getPics(experimentType) {
			let lineup = [];
			let lineupCount = 9;
			if (experimentType.includes("tp")) {
				lineup.push("media/target.jpg");
			}
			while (lineup.length < lineupCount) {
				let pic = "media/fillers/Picture" + Math.floor((Math.random() * 60) + 1) + ".jpg";
				// prevent duplicates by checking if pic is already in lineup
				if (!lineup.includes(pic)) {
					lineup.push(pic);
				}
			}
			return shuffle(lineup);
		}
		function addPics(lineup) {
			for (let pic in lineup) {
				document.getElementById(pic).src = lineup[pic];
			}
		}
		function getImage() {
			let img;
			if (window.experimentType === "stp" || window.experimentType === "tp")
				img = "media/target.jpg";
			else {
				img = "media/fillers/Picture2.jpg";
			}
			return img;
		}
		// called when a choice has been made by a user
		function stopTime() {
			endTime = new Date();
			var seconds = endTime - startTime; //in ms
			// strip the ms
			seconds /= 1000;
			window.time = seconds;
		}
		/**the next button that is displayed if user checks 'not present' box
		the popup that is displayed in this case is the target, so this executes
		in "tp" experiments ONLY **/
		document.getElementById('next-button1').addEventListener('click', function() {
			set(document.getElementById("popup-slider").value);
		});
		/**the next button that is displayed if user selects an ID in ALL types of
		experiments (tp, tnp, stp, and stnp), or if the user checks 'not present'
		in the standard experiment (stp, stnp). In this case, no popup appears, and
		the next button will only be displayed once the confidence slider has been
		used.**/
		document.getElementById('next-button').addEventListener('click', function() {
			set(document.getElementById("confidence-slider").value);
		});
		function set(slider_value) {
			console.log(slider_value)
			setDatabase({
				'path': `${window.userId}/lineup`,
				'data': {
					"time": (window.experimentType.includes("s")) ? window.time : window.time,
					"selected filler": (window.experimentType.includes("s")) ? (!window.targetSelected && window.pictureSelected) : (!window.targetSelected && window.pictureSelected),
					"checked 'not present'": (window.experimentType.includes("s")) ? window.radioSelected : window.radioSelected,
					"correct": (window.experimentType.includes("tp")) ? window.targetSelected : window.radioSelected,
					"selected target": (window.experimentType.includes("s")) ? (window.targetSelected) : window.targetSelected,
					"confidence level": (window.experimentType.includes("s")) ? window.standardConfidence : slider_value,
					//"target confidence": (!window.experimentType.includes("s")) ? ((window.experimentType.includes("tp")) ? slider_value : "N/A"),
				}
			});
		}
	</script>

</body>

</html>
